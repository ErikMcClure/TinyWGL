function TinyPass(){this.cameraMatrix=Matrix.I(4);this.renderables=[];this.rendertarget=null;this.onDraw=function(){}}function TinyWGL(e,t){var n=e.getContext("webgl")||e.getContext("experimental-webgl");this.gl=n;if(!n)return null;this.createShader=createShader;this.getShader=getShader;this.draw=draw;this.createVertexBuffer=createVertexBuffer;this.createIndexBuffer=createIndexBuffer;this.applyShader=applyShader;this.setTexture=setTexture;this.loadTexture=loadTexture;this.defaultTexLoad=defaultTexLoad;this.pow2TexLoad=pow2TexLoad;this.createRenderTarget=createRenderTarget;this.needredraw=false;this.Mat4x4=function(e,t){n.uniformMatrix4fv(e,false,new Float32Array(t.flatten()))};this.Float1=function(e,t){n.uniform1f(e,t)};this.Float2=function(e,t){n.uniform2fv(e,new Float32Array(t))};this.Float3=function(e,t){n.uniform3fv(e,new Float32Array(t))};this.Float4=function(e,t){n.uniform4fv(e,new Float32Array(t))};var r=this;this.time=0;this.delta=0;this.lastTime=(new Date).getTime();this.timeWarp=1;this.basicShader=this.createShader("default-shader-fs","default-shader-vs",{PMat:this.Mat4x4,ModelMat:this.Mat4x4},[["Position",3,0,0]]);this.imgShader=this.createShader("texture-shader-fs","texture-shader-vs",{PMat:this.Mat4x4,ModelMat:this.Mat4x4,Color:function(e,t){r.Float4(e,!t?[1,1,1,1]:t)},s0:function(e,t){r.setTexture(e,t)}},[["Position",3,20,0],["TexCoord",2,20,12]]);this.identity=Matrix.I(4);this.perspectiveMatrix=this.identity;this.perspectiveCameraMatrix=this.identity;this.pass=[new TinyPass];this.imgIndices=this.createIndexBuffer([0,1,3,0,2,3]);var i=[];for(var s=0;s<4;++s){i[s*5]=s&1;i[s*5+1]=-((s&2)>>1);i[s*5+2]=-1;i[s*5+3]=s&1;i[s*5+4]=(s&2)>>1}this.imgVerts=this.createVertexBuffer(i);n.clearColor(0,0,0,1);n.enable(n.DEPTH_TEST);n.enable(n.BLEND);n.blendFunc(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA);n.depthFunc(n.LEQUAL);var o=function(i){r.canvaswidth=e.width=window.innerWidth;r.canvasheight=e.height=window.innerHeight;n.viewport(0,0,e.width,e.height);r.perspectiveMatrix=makePerspective(45,e.width/e.height,.1,t);r.needredraw=true};addEvent(window,"resize",o);window.requestAnimFrame=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||function(e){window.setTimeout(e,1e3/60)}}();o({})}function createShader(e,t,n,r){var i=this.gl;var s=this.getShader(e);var o=this.getShader(t);var u=i.createProgram();i.attachShader(u,o);i.attachShader(u,s);i.linkProgram(u);if(!i.getProgramParameter(u,i.LINK_STATUS)){alert("Unable to initialize the shader program.")}u.props=n;u.attributes=r;return u}function getShader(e){var t=this.gl;var n=document.getElementById(e);if(!n){return null}var r="";var i=n.firstChild;while(i){if(i.nodeType==3){r+=i.textContent}i=i.nextSibling}var s;if(n.type=="x-shader/x-fragment"){s=t.createShader(t.FRAGMENT_SHADER)}else if(n.type=="x-shader/x-vertex"){s=t.createShader(t.VERTEX_SHADER)}else{return null}t.shaderSource(s,r);t.compileShader(s);if(!t.getShaderParameter(s,t.COMPILE_STATUS)){alert(t.getShaderInfoLog(s));return null}return s}function defaultTexLoad(e,t){var n=this.gl;n.bindTexture(n.TEXTURE_2D,t);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.LINEAR);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.LINEAR);n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,e);n.bindTexture(n.TEXTURE_2D,null)}function pow2TexLoad(e,t){var n=this.gl;n.bindTexture(n.TEXTURE_2D,t);n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,e);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.LINEAR);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.LINEAR_MIPMAP_NEAREST);n.generateMipmap(n.TEXTURE_2D);n.bindTexture(n.TEXTURE_2D,null)}function loadTexture(e,t){var n=this.gl.createTexture();var r=new Image;var i=this;r.onload=!t?function(){i.defaultTexLoad(r,n)}:function(){t(r,n)};r.src=e;return n}function setTexture(e,t,n){var r=this.gl;if(!n)n=0;r.activeTexture(r["TEXTURE"+n]);r.bindTexture(r.TEXTURE_2D,t);r.uniform1i(e,n)}function createRenderTarget(e,t){var n=this.gl;var r=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,r);r.width=!e?this.canvaswidth:e;r.height=!t?this.canvasheight:t;var i=n.createTexture();n.bindTexture(n.TEXTURE_2D,i);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.LINEAR);n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.LINEAR);n.texImage2D(n.TEXTURE_2D,0,n.RGBA,r.width,r.height,0,n.RGBA,n.UNSIGNED_BYTE,null);var s=n.createRenderbuffer();n.bindRenderbuffer(n.RENDERBUFFER,s);n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_COMPONENT16,r.width,r.height);n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,i,0);n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,s);n.bindTexture(n.TEXTURE_2D,null);n.bindRenderbuffer(n.RENDERBUFFER,null);n.bindFramebuffer(n.FRAMEBUFFER,null);return{rt:r,tex:i,renderbuffer:s}}function createVertexBuffer(e){var t=this.gl;var n=t.createBuffer();t.bindBuffer(t.ARRAY_BUFFER,n);t.bufferData(t.ARRAY_BUFFER,new Float32Array(e),t.STATIC_DRAW);return n}function createIndexBuffer(e){var t=this.gl;var n=t.createBuffer();t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n);t.bufferData(t.ELEMENT_ARRAY_BUFFER,new Uint16Array(e),t.STATIC_DRAW);return n}function applyShader(e,t){var n=this.gl;n.useProgram(e);n.bindBuffer(n.ARRAY_BUFFER,t);for(var r=0;r<e.attributes.length;r++){var i=e.attributes[r];var s=n.getAttribLocation(e,i[0]);n.enableVertexAttribArray(s);n.vertexAttribPointer(s,i[1],n.FLOAT,false,i[2],i[3])}}function draw(){var e=this.gl;var t=this;window.requestAnimFrame(function(){t.draw()});var n=(new Date).getTime();this.delta=n-this.lastTime;this.delta*=this.timeWarp;this.time+=this.delta;this.lastTime=n;if(this.timeWarp===0&&!this.needredraw)return;e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT);this.needredraw=false;for(var r=0;r<this.pass.length;r++){var i=this.pass[r];i.onDraw();this.perspectiveCameraMatrix=this.perspectiveMatrix.x(i.cameraMatrix);e.bindFramebuffer(e.FRAMEBUFFER,i.rendertarget);for(var s=0;s<i.renderables.length;s++){var o=i.renderables[s];o.render(this);this.applyShader(o.shader,o.verts);for(var u in o.shader.props){var a=e.getUniformLocation(o.shader,u);o.shader.props[u](a,o.params[u])}if(!o.indices){e.drawArrays(o.type,0,o.count)}else{e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,o.indices);e.drawElements(o.type,o.count,e.UNSIGNED_SHORT,0)}}}}function TinyImage(e,t,n){if(typeof e==="string")e=[e];if(!n)n=t.imgShader;this.verts=t.imgVerts;this.count=6;this.indices=t.imgIndices;this.params={ModelMat:Matrix.I(4)};for(var r=0;r<e.length;++r){this.params["s"+r]=t.loadTexture(e[r],r)}this.shader=n;this.type=t.gl.TRIANGLES;this.render=function(e){this.params["PMat"]=t.perspectiveCameraMatrix}}function FullScreenQuad(e,t){var n=[];for(var r=0;r<4;++r){n[r*5]=((r&1)<<1)-1;n[r*5+1]=-((r&2)-1);n[r*5+2]=0;n[r*5+3]=r&1;n[r*5+4]=(r&2)>>1}this.verts=t.createVertexBuffer(n);this.count=6;this.indices=t.imgIndices;this.params={PMat:Matrix.I(4),ModelMat:Matrix.I(4),s0:e};this.shader=t.imgShader;this.type=t.gl.TRIANGLES;this.render=function(e){}}var addEvent=function(e,t,n){if(e==null||e==undefined)return;if(e.addEventListener){e.addEventListener(t,n,false)}else if(e.attachEvent){e.attachEvent("on"+t,n)}else{e["on"+t]=n}};